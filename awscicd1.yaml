AWSTemplateFormatVersion: 2010-09-09
Description: AWS template to check CICD
Parameters:
  GitHubOwner:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]*"
    Default: mahadevswamygowda

  GitHubRepository:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]*"

  GitHubBranch:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]*"
    Default: main

Resources:
  codebuildservicerole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Sid: CodeCommitPolicy
                Effect: Allow
                Action:
                  - 'codecommit:GitPull'
                Resource: '*'
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource: '*'
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - 's3:PutObject'
                Resource: '*'
              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource: '*'

  Codebuildsourcecredentials:
    Type: 'AWS::CodeBuild::SourceCredential'
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: '{{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}'

  Codebuildproject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Ref AWS::StackName
      ServiceRole: !Ref codebuildservicerole
      Source:
        Type: GITHUB
        Location: https://github.com/mahadevswamygowda/github-aws-cicd.git
        BuildSpec: buildspec.yaml
        Auth:
          Type: OAUTH
          Resource: !Ref Codebuildsourcecredentials
      Artifacts:
        Type: NO_ARTIFACTS
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: 'PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED'
            - Type: BASE_REF
              Pattern: !Sub ^refs/heads/master$
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0

  codepipelineservicerole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Sid: CodeCommitPolicy
                Effect: Allow
                Action:
                  - 'codecommit:GitPull'
                Resource: '*'
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource: '*'
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - 's3:PutObject'
                Resource: '*'
              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource: '*'
              - Sid: CodeBuildPolicy
                Effect: Allow
                Action:
                  - 'CodeBuild:BatchGetBuilds'
                  - 'CodeBuild:StartBuild'
                Resource: '*'

  Codepipelineartifactstore:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
         Status: Enabled

  codepipelinewebhook: 
    Type: 'AWS::CodePipeline::Webhook' 
    Properties:
      AuthenticationConfiguration: 
        SecretToken: '{{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}'
      Filters: 
      - JsonPath: "$.ref" 
        MatchEquals: refs/heads/{Branch} 
      Authentication: GITHUB_HMAC 
      TargetPipeline: !Ref codepipeline
      TargetAction: Source 
      Name: MyWebhook 
      TargetPipelineVersion: !GetAtt codepipeline.Version
      RegisterWithThirdParty: 'true'

  Codebuildprojectdeploydev:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-deploy-dev'
      ServiceRole: !Ref codebuildservicerole
      Source:
        Type: CODEPIPELINE
        BuildSpec: deployspec.yaml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables: 
          - Name: ENV_NAME
            Value: dev

  Codebuildprojectdeployqa:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-deploy-qa'
      ServiceRole: !Ref codebuildservicerole
      Source:
        Type: CODEPIPELINE
        BuildSpec: deployspec.yaml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables: 
          - Name: ENV_NAME
            Value: qa

  Codebuildprojectdeployprod:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-deploy-prod'
      ServiceRole: !Ref codebuildservicerole
      Source:
        Type: CODEPIPELINE
        BuildSpec: deployspec.yaml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables: 
          - Name: ENV_NAME
            Value: prod

  codepipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt codepipelineservicerole.Arn
      ArtifactStore:
          Type: S3
          Location: !Ref Codepipelineartifactstore
      Stages:
          - Name: Source
            Actions:
              - Name: Source
                ActionTypeId:
                  Category: Source
                  Owner: ThirdParty
                  Version: 1
                  Provider: GitHub
                Configuration:
                  Owner: !Ref GitHubOwner
                  Repo: !Ref GitHubRepository
                  Branch: !Ref GitHubBranch
                  PollForSourceChanges: False
                  OAuthToken: '{{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}'
                OutputArtifacts:
                  - Name: SourceCode

          - Name: Build
            Actions: 
              - Name: Build
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
                Configuration:
                  ProjectName: !Ref Codebuildproject
                OutputArtifacts:
                  - Name: BuildOutput
                InputArtifacts:
                  - Name: SourceCode 

          - Name: Dev
            Actions: 
              - Name: Deploy
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
                Configuration:
                  ProjectName: !Ref Codebuildprojectdeploydev
                InputArtifacts:
                  - Name: BuildOutput 

          - Name: QA
            Actions: 
              - Name: Deploy
                RunOrder: 1
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
                Configuration:
                  ProjectName: !Ref Codebuildprojectdeployqa
                InputArtifacts:
                  - Name: BuildOutput

              - Name: Approval
                RunOrder: 1
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: 1
                Configuration:
                  CustomData: Approve or reject this change after running tests

          - Name: PROD
            Actions: 
              - Name: Deploy
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: 1
                Configuration:
                  ProjectName: !Ref Codebuildprojectdeployprod
                InputArtifacts:
                  - Name: BuildOutput 
